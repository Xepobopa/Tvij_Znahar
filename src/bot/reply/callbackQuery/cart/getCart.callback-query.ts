import { InlineKeyboard } from "grammy";
import { EInlineKeyboard, MyContext } from "../../../../types";
import { CartService } from "../../../services/cart";

export const getUserCart = async (ctx: MyContext) => {
    const userId = ctx.from?.id.toString();
    if (!userId)
        return await ctx.answerCallbackQuery(
            '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –∫–æ—à–∏–∫–∞, –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –±—É–¥—å-—è–∫–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!'
        );
    
    const cart = await CartService.getUserCart(userId);
    if (cart.length === 0) {
        const replyText = `<b>–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π!</b>\n\n –í–∏ –º–æ–∂–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—à–∏–∫–∞, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ` +
        `<b>"–ü—Ä–æ–¥—É–∫—Ü—ñ—è"</b> -> –í–∏–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä -> "<b>–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞</b>"`;

        return await ctx.reply(replyText, { 
            parse_mode: 'HTML'
        });
    } 

    const totalSum = cart.reduce((acc, elem) => acc + elem.quantity * elem.product.price!, 0);
    const replyText = `–í–∞—à –∫–æ—à–∏–∫. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —Ç–æ–≤–∞—Ä, —â–æ–± —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ –π–æ–≥–æ!\n` +
    `\n<b>–£ —Å—É–º—ñ: ${totalSum} –≥—Ä–Ω.</b>`;
    const inlineKeyboard = new InlineKeyboard();
    cart.forEach((elem, index) => {
        inlineKeyboard.text(
            `${elem.product.name} - ${elem.product.price} –≥—Ä–Ω. x ${elem.quantity} —à—Ç. - ${elem.product.price! * elem.quantity} –≥—Ä–Ω.`, 
            `${EInlineKeyboard.CART_ELEM_INFO}_${elem.id}`
        ).row();
    });
    inlineKeyboard
        .text(`–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ–ø–ª–∞—Ç–∏ –∫–æ—à–∏–∫–∞ - ${totalSum} –≥—Ä–Ω.`, EInlineKeyboard.PAYMENT).row()
        .text('–ü—Ä–æ–¥—É–∫—Ü—ñ—è üçÑ', EInlineKeyboard.CATALOG);

    return await ctx.reply(replyText, { 
        reply_markup: inlineKeyboard,
        parse_mode: 'HTML'
    });
}